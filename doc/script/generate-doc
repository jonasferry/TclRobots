#!/usr/bin/env tclsh

set docpath "./doc"
set srcfiles {tclrobots syscalls api gui simulator}

source $docpath/web.tcl

foreach file $srcfiles {
    if {$file eq "api"} {
        set srcfile "syscalls.tcl"
        set docfile "api_doc"
        # Generate doc.html
        exec robodoc --src $srcfile --doc $docpath/$docfile --singlefile \
            --html --sections --toc --rc $docpath/robodoc.rc --nosort \
            --headless --footless \
            --internalonly
    } else {
        set srcfile "${file}.tcl"
        set docfile "${file}_doc"
        # Generate doc.html
        exec robodoc --src $srcfile --doc $docpath/$docfile --singlefile \
            --html --sections --toc --rc $docpath/robodoc.rc --nosort \
            --headless --footless
    }
    # Remove extra css file
    file delete $docpath/$docfile.css

    # Clean up file
    set f [open $docpath/${docfile}.html]
    set toc 0
    set content 0
    set out {}

    foreach line [split [read $f] \n] {
        if {[regexp {TABLE OF CONTENTS} $line]} {
            # Start read table of contents. We don't want to remove
            # these links, as will be done with the content.
            set toc 1
        }
        if {$toc} {
            if {[regexp {<a name="robo0"></a>} $line]} {
                # Table of contents done
                set toc     0
                set content 1
            }
        }
        if {$content} {
            if {[regexp {<p>. <a href=.*>Top</a>.*} $line]} {
                #Remove navigation
                continue
            }
            # Remove <strong> and </strong>
            set line [regsub -all {</*strong>} $line {}]

            # Remove links
            set line [regsub -all {<a href=\"[^\"]+\">([^<]+)</a>} $line {\1}]
        }
        append out $line \n
    }
    close $f

    set f [open $docpath/${docfile}.html w]
    puts $f [header $docfile]
    puts $f $out
    puts $f [footer]
    close $f
}
